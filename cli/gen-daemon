#!/bin/bash
# Main daemon process - manages all bg/services and monitors file changes

ROOT="/var/www/gs"
BG_DIR="$ROOT/cli/bg"
LOG_DIR="$ROOT/log"
CUBO_DIR="$ROOT/gaia/cubos"
SOURCE_DIR="$ROOT/gaia/core"
SERVICES=()  # Stores active service PIDs

# Start all background services
start_services() {
    for script in "$BG_DIR"/*.sh; do
        if [ -x "$script" ]; then
            local name=$(basename "$script" .sh)
            # Check if already running
            if pgrep -f "$script" > /dev/null; then
                echo "$name is already running. Skipping."
                continue
            fi
            nohup "$script" >> "$LOG_DIR/${name}.log" 2>&1 &
            SERVICES+=($!)
            echo "Started $name (PID: $!)"
        fi
    done
}

# Stop all background services
stop_services() {
    for pid in "${SERVICES[@]}"; do
        if kill -0 "$pid" 2>/dev/null; then
            kill -9 "$pid"
            echo "Stopped process $pid"
        fi
    done
    SERVICES=()
}



# File change processing function
process_change() {
    local changed_file="$1"
    if [[ "$changed_file" == "$CUBO_DIR"* ]]; then
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] Cubo updated: $changed_file" >> "$LOG_DIR/cubo-watch.log"
        gen gaia updateCacheCP "$(basename "$(dirname "$changed_file")").$(basename "$changed_file" .php)"
    elif [[ "$changed_file" == "$SOURCE_DIR"* ]]; then
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] Gaia updated: $changed_file" >> "$LOG_DIR/gaia-watch.log"
        cp "$changed_file" "$SOURCE_DIR/../core2/$(basename "$changed_file")"
    fi
}

# Centralized inotify watcher
watch_files() {
    inotifywait -m -r -e modify,create,delete "$CUBO_DIR" "$SOURCE_DIR" --format '%w%f' | \
    while read -r changed_file; do
        process_change "$changed_file"
    done
}

# Cleanup on exit
trap stop_services EXIT

# Start services and inotify watcher
start_services
watch_files &  # Runs inotify in the background

# Main daemon loop to monitor services
while true; do
    for i in "${!SERVICES[@]}"; do
        if ! kill -0 "${SERVICES[$i]}" 2>/dev/null; then
            script=$(ls "$BG_DIR" | sed -n "$((i+1))p")
            echo "Restarting crashed service: $script"
            nohup "$BG_DIR/$script" >> "$LOG_DIR/${script%.*}.log" 2>&1 &
            SERVICES[$i]=$!
        fi
    done
    sleep 10
done
